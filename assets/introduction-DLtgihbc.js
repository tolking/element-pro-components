import{u as d}from"./vue.8fc199ce-Be4bgeRO.js";import{r as i,o as a,a as p,b as n,d as t,e as r,f as s}from"./index-BypRYKmK.js";const m={class:"markdown-body"},c={href:"https://element-plus.org/",class:"md-link",target:"_blank",rel:"noopener noreferrer"},h={href:"https://v3.vuejs.org/",class:"md-link",target:"_blank",rel:"noopener noreferrer"},u={href:"https://next.router.vuejs.org/",class:"md-link",target:"_blank",rel:"noopener noreferrer"},f={href:"https://github.com/vuejs/rfcs/pull/227.",class:"md-link",target:"_blank",rel:"noopener noreferrer"},g={href:"https://developer.mozilla.org/en-US/docs/Web/CSS/--*",class:"md-link",target:"_blank",rel:"noopener noreferrer"},j="介绍",y=[{name:"description",content:"element-pro-components 组件库的基础信息介绍"},{property:"og:title",content:"介绍"},{name:"twitter:title",content:"介绍"}],C={__name:"introduction",setup(b,{expose:l}){return l({frontmatter:{title:"介绍",meta:[{name:"description",content:"element-pro-components 组件库的基础信息介绍"},{property:"og:title",content:"介绍"},{name:"twitter:title",content:"介绍"}]}}),d({title:"介绍",meta:[{name:"description",content:"element-pro-components 组件库的基础信息介绍"},{property:"og:title",content:"介绍"},{name:"twitter:title",content:"介绍"}]}),(v,e)=>{const o=i("icon-external-link");return a(),p("div",m,[e[12]||(e[12]=n("h1",{id:"介绍",tabindex:"-1"},[t("介绍 "),n("a",{class:"header-anchor md-link",href:"#介绍","aria-hidden":"true"},"#")],-1)),n("p",null,[e[3]||(e[3]=t("element-pro-components 是一个基于 ")),n("a",c,[e[0]||(e[0]=t("element-plus")),r(o,{class:"link-icon"})]),e[4]||(e[4]=t(", ")),n("a",h,[e[1]||(e[1]=t("vue")),r(o,{class:"link-icon"})]),e[5]||(e[5]=t(", ")),n("a",u,[e[2]||(e[2]=t("vue-router")),r(o,{class:"link-icon"})]),e[6]||(e[6]=t(" 的一个适用于中后台开发的一套组件库"))]),e[13]||(e[13]=s('<h2 id="起因" tabindex="-1">起因 <a class="header-anchor md-link" href="#起因" aria-hidden="true">#</a></h2><p>对于中后台开发来说，大部分的表格表单等页面都可以复用，通过将非业务逻辑的部分封装起来成组件能够更加方便使用。同时组件可以和路由等绑定，减少传值。以及实现一些 <code>element-plus</code> 上没有后台常用的功能等</p><p>虽然 <code>element-plus</code> 的封装已经很好了，但对于 <code>el-table</code> 或 <code>el-form</code> 的使用必不可少的需要写大量 <code>el-table-column</code> 或 <code>el-form-item</code> 代码。我们将它转换成 <code>column</code> 配置，通过传入一个数组动态生成这些数据。如果你传入的是具有响应式的数据，在改变 <code>column</code> 时，表格或表单会随之改变。根据这个特性你可以按照喜欢的方式去实现权限等功能</p><h2 id="为什么不是" tabindex="-1">为什么不是 <a class="header-anchor md-link" href="#为什么不是" aria-hidden="true">#</a></h2><h3 id="模版" tabindex="-1">模版 <a class="header-anchor md-link" href="#模版" aria-hidden="true">#</a></h3><p>对于快速开发，或许模版更加方便，但模版并不一定十分适合你。你可能不习惯模版的 <code>prettier</code> 或 <code>eslint</code> 配置、你可能用不上模版的部分依赖、你可能会在意还没有写页面打包就 1M+ 的大小…</p><p>组件化的优势就是，你可以自己搭建开发环境。想用 <code>vite</code> 构建就用、想不用 <code>eslint</code> 就不用…</p><h3 id="基于-vue2-element-ui" tabindex="-1">基于 vue2 element-ui <a class="header-anchor md-link" href="#基于-vue2-element-ui" aria-hidden="true">#</a></h3>',8)),n("p",null,[e[9]||(e[9]=t("该组件库的开发理念就是面向未来，如果查看源码你就会发现像是 vue 3 的 ")),n("a",f,[e[7]||(e[7]=t("script setup")),r(o,{class:"link-icon"})]),e[10]||(e[10]=t(" 实验性功能、像是 CSSNext 的 ")),n("a",g,[e[8]||(e[8]=t("CSS Variables")),r(o,{class:"link-icon"})]),e[11]||(e[11]=t("。在保证大部分浏览器的兼容性的情况下，会更多的使用新特性、新功能来开发"))]),e[14]||(e[14]=s('<h2 id="浏览器支持" tabindex="-1">浏览器支持 <a class="header-anchor md-link" href="#浏览器支持" aria-hidden="true">#</a></h2><p>理论上同 element-plus</p><table><thead><tr><th><img src="https://cdn.jsdelivr.net/npm/@browser-logos/edge/edge_32x32.png" alt="IE"></th><th><img src="https://cdn.jsdelivr.net/npm/@browser-logos/firefox/firefox_32x32.png" alt="Firefox"></th><th><img src="https://cdn.jsdelivr.net/npm/@browser-logos/chrome/chrome_32x32.png" alt="Chrome"></th><th><img src="https://cdn.jsdelivr.net/npm/@browser-logos/safari/safari_32x32.png" alt="Safari"></th></tr></thead><tbody><tr><td>Edge ≥ 79</td><td>Firefox ≥ 78</td><td>Chrome ≥ 64</td><td>Safari ≥ 12</td></tr></tbody></table>',3))])}}};export{C as default,y as meta,j as title};
